% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_exposure.R
\name{render_exposure}
\alias{render_exposure}
\title{Apply exposure compensation (in stops)}
\usage{
render_exposure(
  image,
  exposure = 0,
  gamma_correction = NA,
  filename = NA,
  preview = FALSE,
  ...
)
}
\arguments{
\item{image}{3-layer RGB/4-layer RGBA array, \code{rayimg} class, or filename of an image.}

\item{exposure}{Default \code{0}. Exposure compensation in stops; RGB is scaled by \code{2^exposure}.}

\item{gamma_correction}{Default \code{NA}. If \code{TRUE}, treat as sRGB (decode -> scale -> encode).
If \code{FALSE}, treat as scene-linear/HDR and scale directly. If \code{NA}, auto-detect using
\code{attr(image, "gamma_correct")}, falling back to a range heuristic (outside 0..1 is linear).}

\item{filename}{Default \code{NA}. Output path.}

\item{preview}{Default \code{FALSE}. If \code{TRUE}, display the image.}

\item{...}{Additional args passed to \code{\link[=plot_image]{plot_image()}} (when \code{preview=TRUE})
or to \code{\link[=ray_write_image]{ray_write_image()}} (when \code{filename} is given).}
}
\value{
A \code{rayimg} RGBA array.
}
\description{
Apply exposure compensation (in stops)
}
\examples{
# LDR/sRGB (auto): decodes to linear, applies EV, re-encodes
if (run_documentation()) {
  render_exposure(dragon, exposure = +1, preview = TRUE)
}
# Force linear/HDR behavior
if (run_documentation()) {
  render_exposure(dragon * 2, exposure = -1, gamma_correction = FALSE, preview = TRUE)
}
}
